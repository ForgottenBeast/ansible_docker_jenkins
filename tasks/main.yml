- name: "Create proxy_net if it does not exist"
  become: True
  tags:
    - jenkins_deploy
    - jenkins_setup
  docker_network:
    name: proxy_net

- include_tasks: volumes.yml
  become: True
  with_items:
    - "{{ JENKINS_VOLUME }}"
  tags:
    - jenkins_volumes_setup
    - jenkins_setup

- import_tasks: setup.yml
  become: True
  tags: jenkins_setup

- import_tasks: backup.yml
  become: True
  tags: jenkins_all_backup


- import_tasks: restore.yml
  become: True
  tags: jenkins_all_restore

- name: "Remove jenkins container"
  become: True
  tags: jenkins_update
  docker_container:
    name: jenkins
    state: absent

- name: "Start jenkins container w/ ssl"
  when: SSL == True
  become: True
  tags:
    - jenkins_deploy
    - jenkins_update
    - jenkins_restore
  docker_container:
    name: jenkins
    image: forgottenbeast/jenkins_docker:x86_64
    pull: True
    state: started
    env:
     VIRTUAL_HOST: "{{ jenkins_domain_name }}"
     VIRTUAL_PROTO: http
     VIRTUAL_PORT: 8080
     LETSENCRYPT_HOST: "{{ jenkins_letsencrypt_domain_name }}"
     LETSENCRYPT_EMAIL: "{{ jenkins_letsencrypt_mail }}"
     LETSENCRYPT_TEST: "{{ jenkins_letsencrypt_testmode }}"

    networks:
      - name: proxy_net
    volumes:
      - "{{ JENKINS_VOLUME }}:/var/jenkins_home"
      - /var/run/docker.sock:/var/run/docker.sock

- name: "Start jenkins container w/o SSL"
  become: True
  when: SSL == False
  tags:
    - jenkins_update
    - jenkins_deploy
    - jenkins_restore
  docker_container:
    name: jenkins
    image: forgottenbeast/jenkins_docker:x86_64
    pull: True
    state: started
    env:
     VIRTUAL_HOST: "{{ jenkins_domain_name }}"
     VIRTUAL_PROTO: http
     VIRTUAL_PORT: 8080
    networks:
      - name: proxy_net
    volumes:
      - "{{ JENKINS_VOLUME }}:/var/jenkins_home"
      - /var/run/docker.sock:/var/run/docker.sock

- name: "Reading initial password"
  tags:
    - jenkins_deploy
  become: True
  command: docker exec jenkins bash -c "cat ~/secrets/initialAdminPassword"
  register: admin_pass

- name: "Here is the initial admin password:"
  debug:
    msg: "{{ admin_pass.stdout }}"
  tags:
    - jenkins_deploy
